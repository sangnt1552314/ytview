name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME=ytview
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=$BINARY_NAME.exe
          fi
          mkdir -p dist
          go build -v -o "dist/${BINARY_NAME}_${{ matrix.goos }}_${{ matrix.goarch }}" ./cmd/main.go

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ytview-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: ytview-*
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*
          generate_release_notes: true
          draft: false
          prerelease: false 